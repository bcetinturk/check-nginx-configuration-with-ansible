---
# tasks file for install-jenkins
- name: Install openjdk-11
  ansible.builtin.apt:
    name: openjdk-11-jre
    update_cache: true

- name: Download Jenkins GPG Key
  ansible.builtin.get_url:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
    dest: /tmp/jenkinskey

- name: De-Armor Jenkins GPG Key
  ansible.builtin.shell:  "sudo gpg --dearmor < /tmp/jenkinskey | sudo tee /usr/share/keyrings/jenkins-archive-keyring.gpg"
  args:
    creates: /usr/share/keyrings/jenkins-archive-keyring.gpg

- name: Add Jenkins Repository to APT Sources List
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/jenkins-archive-keyring.gpg] https://pkg.jenkins.io/debian-stable binary/"
    state: present

- name: Install Jenkins
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
  loop: 
    - jenkins
    - python3-pip
    - ansible
  # sometimes 'systemctl start jenkins' times out, causing this task to fail
  ignore_errors: true

- name: Remove default JAVA_ARGS
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/jenkins.service
    regexp: '^Environment="JAVA_OPTS=-Djava.awt.headless=true"$'
    line: '# Environment="JAVA_OPTS=-Djava.awt.headless=true"'

- name: Modify JAVA_ARGS to skip setup wizard
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/jenkins.service
    insertafter: '^# Environment="JAVA_OPTS=-Djava.awt.headless=true"$'
    line: "Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false\""
  notify: "restart jenkins"
  register: java_args_update

- name: Restart Jenkins Block
  block:
    - name: Daemon-reload
      ansible.builtin.systemd:
        daemon-reload: true

    - name: Restart Jenkins
      ansible.builtin.service:
        name: jenkins
        state: restarted
  when: java_args_update.changed == true

- name: Get initial password
  ansible.builtin.slurp:
    src: /var/lib/jenkins/secrets/initialAdminPassword
  register: admin_password

- name: Debug admin_password
  debug:
    msg: "{{ admin_password['content'] | b64decode | trim }}"

- name: Install Jenkins plugins
  community.general.jenkins_plugin:
    name: "{{ item }}"
    url_username: admin
    url_password: "{{ admin_password['content'] | b64decode | trim }}"
    url: http://192.168.33.13:8080
  register: plugin_result
  loop:
    - configuration-as-code
    - workflow-job
    - workflow-durable-task-step
    - workflow-multibranch
    - pipeline-input-step
    - pipeline-model-definition
    - pipeline-stage-step
    - workflow-basic-steps
    - workflow-aggregator
    - git
    - job-dsl
    - ansible
  notify: "restart jenkins"

# - name: Create .ssh directory for Jenkins user
#   ansible.builtin.file:
#     path: /var/lib/jenkins/.ssh
#     state: directory
#     owner: jenkins
#     group: jenkins
#     mode: '0700'

- name: Copy private key to Jenkins user's ssh directory
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: jenkins
    group: jenkins
    mode: '0400'
  loop:
    # - src: ~/.ssh/id_rsa
    #   dest: /var/lib/jenkins/.ssh/id_rsa
    # - src: ~/vault-pass-file.txt
    #   dest: /var/lib/jenkins/vault-pass-file.txt
    - src: jenkins.yml
      dest: /var/lib/jenkins/jenkins.yml
  notify: "restart jenkins"

- name: Set CASC_JENKINS_CONFIG
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/jenkins.service
    insertafter: 'Group=jenkins'
    line: 'Environment="CASC_JENKINS_CONFIG=/var/lib/jenkins/jenkins.yml"'
  notify: "restart jenkins"

